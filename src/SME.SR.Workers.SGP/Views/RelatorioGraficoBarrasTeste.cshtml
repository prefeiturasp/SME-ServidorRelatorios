@model SME.SR.Infra.GraficoBarrasVerticalDto



<style type="text/css">
    #chartcontainer {
        height: 850px;
        width: 600px;
        border: double;
        background-color: aliceblue;
        position: fixed;
        top: 100px;
        left: 500px;
    }

    #charttype {
        border: double;
        height: 75px;
        width: 100px;
        position: fixed;
        left: 750px;
    }
</style>
<script type="text/javascript">
    var studentexamdata = new Array();
    studentexamdata[0] = "01,80";
    studentexamdata[1] = "02,40";
    studentexamdata[2] = "03,70";
    studentexamdata[3] = "04,80";
    studentexamdata[4] = "05,30";
    studentexamdata[5] = "06,90";
    studentexamdata[6] = "07,70";
    studentexamdata[7] = "08,80";
    studentexamdata[8] = "09,100";
    studentexamdata[9] = "10,60";
    studentexamdata[10] = "11,10";
    studentexamdata[11] = "12,50";

    var svg;
    var svgWidth, svgHeight, svgMargin, svgSpace;
    var MarginSpace, MarginHeight;
    var barchartWidth, barchartMargin, totalChartBars, maximumDataValue;
    var LabelOnYAxis;

    function drawBarChart() {
        svg = document.getElementsByTagName('svg')[0];


        clear();
        ChartSettings();
        drawAxis();
        drawChart("Bar");



    }

    function clear() {
        while (svg.lastChild) {
            svg.removeChild(svg.lastChild);
        }
    }

    function ChartSettings() {
        svgMargin = 20;
        svgSpace = 60;

        svgHeight = svg.height.baseVal.value - 2 * svgMargin - svgSpace;
        svgWidth = svg.width.baseVal.value - 2 * svgMargin - svgSpace;

        MarginSpace = svgMargin + svgSpace;
        MarginHeight = svgMargin + svgHeight;

        barchartMargin = 15;
        totalChartBars = studentexamdata.length;
        barchartWidth = (svgWidth / totalChartBars) - barchartMargin;

        maximumDataValue = 0;
        for (var i = 0; i < totalChartBars; i++) {
            var arrVal = studentexamdata[i].split(",");
            var barVal = parseInt(arrVal[1]);
            if (parseInt(barVal) > parseInt(maximumDataValue))
                maximumDataValue = barVal;
        }

        LabelOnYAxis = 10;
    }

    function drawAxis() {
        //Y-Axis
        drawXYAxis(MarginSpace, MarginHeight, MarginSpace, svgMargin);
        //X-Axis
        drawXYAxis(MarginSpace, MarginHeight, MarginSpace + barchartWidth + 500, MarginHeight);
        drawMarkers();
    }

    function drawXYAxis(x1, y1, x2, y2) {
        var newdataAxis = document.createElementNS("http://www.w3.org/2000/svg", 'line');
        newdataAxis.setAttribute("x1", x1);
        newdataAxis.setAttribute("y1", y1);
        newdataAxis.setAttribute("x2", x2);
        newdataAxis.setAttribute("y2", y2);
        newdataAxis.style.stroke = "black";
        newdataAxis.style.strokeWidth = "2px";
        svg.appendChild(newdataAxis);
    }

    function drawMarkers() {
        var numberMarkers = parseInt(maximumDataValue / LabelOnYAxis);
        for (var i = 0; i < LabelOnYAxis + 1; i++) {
            markerVal = i * numberMarkers;
            markerValHt = i * numberMarkers * svgHeight;
            var xaxisMarkers = MarginSpace - 5;
            var yaxisMarkers = MarginHeight - (markerValHt / maximumDataValue);
            textelement = document.createElementNS("http://www.w3.org/2000/svg", 'text');
            textelement.setAttribute('dx', xaxisMarkers - 40);
            textelement.setAttribute('dy', yaxisMarkers);
            txtnode = document.createTextNode(markerVal);
            textelement.appendChild(txtnode);
            svg.appendChild(textelement);
        }
        for (var i = 0; i < totalChartBars; i++) {
            arrVal = studentexamdata[i].split(",");
            name = arrVal[0];
            markerXPosition = MarginSpace + barchartMargin + (i * (barchartWidth + barchartMargin)) + (barchartWidth / 2);
            markerYPosition = MarginHeight + 20;
            textelement = document.createElementNS("http://www.w3.org/2000/svg", 'text');
            textelement.setAttribute('dx', markerXPosition);
            textelement.setAttribute('dy', markerYPosition);
            txtnode = document.createTextNode(name);
            textelement.appendChild(txtnode);
            svg.appendChild(textelement);
        }
    }

    function drawRectangleForChart(x, y, wd, ht, fill) {
        var rect = document.createElementNS("http://www.w3.org/2000/svg", 'rect');
        rect.setAttributeNS(null, 'x', x);
        rect.setAttributeNS(null, 'y', y);
        rect.setAttributeNS(null, 'width', wd);
        rect.setAttributeNS(null, 'height', ht);
        rect.setAttributeNS(null, 'fill', "blue");
        svg.appendChild(rect);
    }

    function drawEllipse(x, y, rx) {
        var circle = document.createElementNS("http://www.w3.org/2000/svg", 'circle');
        circle.setAttributeNS(null, 'cx', x);
        circle.setAttributeNS(null, 'cy', y);
        circle.setAttributeNS(null, 'r', rx);
        circle.setAttributeNS(null, 'fill', "darkred");
        svg.appendChild(circle);
    }

    function drawChart(chart) {
        for (var i = 0; i < totalChartBars; i++) {
            var arrchartVal = studentexamdata[i].split(",");
            bcVal = parseInt(arrchartVal[1]);
            bcHt = (bcVal * svgHeight / maximumDataValue);
            bcX = MarginSpace + (i * (barchartWidth + barchartMargin)) + barchartMargin + 10;
            bcY = (MarginHeight - bcHt - 2);
            switch (chart) {
                case "Bar":
                    drawRectangleForChart(bcX, bcY, barchartWidth, bcHt, true);
                    break;

                case "Point":
                    drawEllipse(bcX, bcY, 5, 5);
                    break;
            }
        }
    }
    window.onload = drawBarChart;
</script>
<body>
    <div id="chartcontainer">
        <svg id="svgcontainer" height="900" width="550">
        </svg>
    </div>    
</body>