@model SME.SR.Infra.RelatorioCompensacaoAusenciaDto

@{

    int contadorQuebrarPagina = 0;
    int contadorMaximoLinhasPorPagina = 46;
    int contadorPagina = 0;

    string VerificaQuebra()
    {
        if (contadorQuebrarPagina >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = 0;
            contadorPagina = contadorPagina + 1;

            var str = MontarCabecalho();
            return $@"<div style='page-break-before:always' />" + str;

        }
        return string.Empty;

    }

    string MontarCabecalho()
    {
        contadorQuebrarPagina = contadorQuebrarPagina + 7;
        var str =
           $@"<div>
            <img class='img-logo-sgp' src='logoMono.png' alt='Logo SGP' />
            </div>
            <div class='titulo-sgp'>SGP - SISTEMA DE GESTÃO PEDAGÓGICA</div>
            <div class='titulo-relatorio'>COMPENSAÇÃO DE AUSÊNCIA</div>
            <div class='fonte-14 header-pagina'>
            <table class='tblTopo'>
            <tbody>
            <tr>
            <td  width='40%' class='sem-border-bottom'>DRE: {Model.DreNome}</td>
            <td width='40%' class='sem-border-bottom'>UE: {Model.UeNome}</td>
            <td  width='20%' class='sem-border-bottom'>TURMA: {Model.TurmaNome}</td>
            </tr>
            </tbody>
            </table>

            <table>
            <tbody>
            <tr>
            <td width='70%' class='sem-border-bottom'>COMPONENTE CURRICULAR: {Model.ComponenteCurricular}</td>
            <td width='30%' class='sem-border-bottom'>BIMESTRE: {Model.Bimestre}</td>
            </tr>
            </tbody>
            </table>

            <table>
            <tbody>
            <tr>
            <td width='80%'>MODALIDADE: {Model.Modalidade}</td>
            <td width='20%'>DATA: {Model.Data}</td>
            </tbody>
            </table>
            </div>
            ";

        return str;
    }

    string MontarCabecalhoCompensacoes()
    {
        var str = $@"
                  <table class='tabela-alunos'>
                      <thead>
                          <th class='sem-border-bottom' width='5%'>Nº</th>
                          <th class='sem-border-bottom' width='60%'>NOME</th>
                          <th class='sem-border-bottom' width='25%'>AUSÊNCIAS COMPENSADAS</th>
                          <th class='sem-border-bottom' width='10%'>%FREQ.</th>
                      </thead>
                  </table>";
        return str;
    }

    string MontarTabelaCompensacoes(List<SME.SR.Infra.RelatorioCompensacaoAusenciaCompensacaoAlunoDto> compensacoes)
    {
        var str = $@"<table class='tabela-alunos'>
                        <tbody>";
        for(int i = 0; i < compensacoes.Count; i++) 
        {
            var compensacao = compensacoes[i];
            str += $@"                  
                   <tr>
                       <td width='5%'>{compensacao.NumeroChamada}</th>
                       <td width='60%'>{compensacao.NomeAluno}</th>
                       <td width='25%'>{compensacao.TotalCompensacoes}</th>
                       <td width='10%'>{compensacao.Frequencia}</th>
                   </tr>";
            contadorQuebrarPagina++;
            var quebra = VerificaQuebra();
            var novaPagina = quebra + (i < compensacoes.Count-1 ? MontarCabecalhoCompensacoes():"");
            str += quebra.Length > 0 ? $@"</tbody></table>{novaPagina}<table class='tabela-alunos'><tbody>" : "";
        }
        str += $@"</tbody></table>";
        return str;
    }


}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Compensação de Ausência</title>
</head>
<body class="body-relatorio">
    <style>
        tblTopo th, td {
            padding: 3px 0px 3px 15px;
            text-align: left;
        }

        .body-relatorio {
            margin: 0.5cm auto;
            font-family: Roboto, sans-serif;
            width: 21cm;
            min-height: 29.7cm;
            background: white;
            color: #42474a;
        }

        .titulo-sgp {
            text-align: right;
            font-size: 14px;
            font-weight: bold;
        }

        .titulo-relatorio {
            text-align: right;
            font-size: 14.5px;
            margin-top: 7px;
        }

        .img-logo-sgp {
            height: 64px;
            float: left;
        }

        .header-pagina {
            margin-top: 33px;
            margin-bottom: 22px;
        }

       .header-pagina td {
          text-align: left;
       }

        table {
            display: table;
            width: 100%;
            border-color: #42474a;
            empty-cells: show;
            border: none;
            border-collapse: collapse;
        }

        thead {
            background-color: #f3f3f3;
        }

        th {
            border: 1px solid #42474a;
            font-weight: normal;
        }

        td {
            border: 1px solid #42474a;
            text-align: center;
        }

        .tabela-alunos tr {
            font-size: 12px;
            height: 24px;
        }

        .mt-25 {
            margin-top: 25px;
        }

        .fonte-14 {
            font-size: 14px !important;
        }

        .alinhar-esquerda {
            text-align: left;
        }

        .rodape-rel-faltas-frequencia {
            margin-top: 10px;
            font-size: 9px;
            font-weight: bold;
        }

        .titulo-sgp-rodape {
            float: left;
        }

        .contador-pagina {
            float: right;
            font-size: 15px;
        }

        .thLimpo {
            background-color: #ffffff;
        }
        .sem-border-bottom {
            border-bottom: 0;
        }
    </style>
    <div>
        @{
            @Html.Raw(MontarCabecalho())

            for (int a = 0; a < Model.Dre.Ue.Turmas.Count; a++)
            {

                @if (Model.Dre.Ue.Turmas[a].Bimestres != null)
                {

                    foreach (var bimestre in Model.Dre.Ue.Turmas[a].Bimestres)
                    {

                        if (Model.TurmaNome == "Todas" || Model.TurmaNome == "")
                        {
                            var turma = Model.Dre.Ue.Turmas[a];
                            <table class="tabela-alunos">
                                <thead>

                                    <tr>
                                        <th>@turma.Nome</th>
                                    </tr>
                                </thead>
                            </table>
                            contadorQuebrarPagina = contadorQuebrarPagina + 1;
                            @Html.Raw(VerificaQuebra())
                        }

                        @if (bimestre.Componentes != null)
                        {
                            if (Model.Bimestre == "Todos" || Model.Bimestre == "")
                            {
                                <table class="tabela-alunos">
                                    <thead>
                                        <tr>
                                            <th>@bimestre.Nome</th>
                                        </tr>
                                    </thead>
                                </table>
                                contadorQuebrarPagina = contadorQuebrarPagina + 1;
                                @Html.Raw(VerificaQuebra())
                            }

                            for (int c = 0; c < bimestre.Componentes.Count; c++)
                            {
                                var componente = bimestre.Componentes[c];

                                if (Model.ComponenteCurricular == "Todos" || Model.ComponenteCurricular == "")
                                {
                                    <table class="tabela-alunos">
                                        <thead>
                                            <tr>
                                                <th>@componente.NomeComponente</th>
                                            </tr>
                                        </thead>
                                    </table>

                                    contadorQuebrarPagina = contadorQuebrarPagina + 1;
                                    @Html.Raw(VerificaQuebra())
                                    foreach (var atividade in componente.Atividades)
                                    {
                                        <table class="tabela-alunos">
                                            <thead>
                                                <tr>
                                                    <th>@atividade.Nome</th>
                                                </tr>
                                            </thead>
                                        </table>

                                        contadorQuebrarPagina++;
                                        @Html.Raw(VerificaQuebra())
                                        if(atividade.CompensacoesAluno.Count() > 0)
                                        {
                                            @Html.Raw(MontarCabecalhoCompensacoes()) 
                                            contadorQuebrarPagina++;
                                        }
                                        @Html.Raw(MontarTabelaCompensacoes(atividade.CompensacoesAluno))
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    </div>
</body>
</html>