@model SME.SR.Infra.RelatorioAcompanhamentoFechamentoConsolidadoPorUeDto

@{
    int contadorQuebrarPagina = 0;
    int contadorMaximoLinhasPorPagina = 45;
    bool quebrou = false;

    string informacoesQuebra()
    {
        @Html.Raw("</tbody></table>");
        @Html.Raw("<div style='page-break-before:always'></div>");

        return "";
    }

    void MontarCabecalho()
    {
        contadorQuebrarPagina = contadorQuebrarPagina + 8;
        <div>
            <img class='img-logo-sgp' src='logoMono.png' alt='Logo SGP' />
        </div>
        <div class='titulo-sgp'>SGP - SISTEMA DE GESTÃO PEDAGÓGICA</div>
        <div class='titulo-relatorio'>RELATÓRIO DE ACOMPANHAMENTO DO FECHAMENTO</div>
        <div class='fonte-14 header-pagina'>
            <table class='tblTopo'>
                <tbody>
                    <tr>
                        <td width='20%' class='espaco-esquerda-15'>DRE: @Model.DreNome</td>
                        <td width='80%' class='espaco-esquerda-15'>UE: @Model.UeNome</td>
                    </tr>
                </tbody>
            </table>
            <table>
                <tbody>
                    <tr>
                        <td width='20%' class='sem-border-top espaco-esquerda-15'>TURMA: @Model.Turma</td>
                        <td width='20%' class='sem-border-top espaco-esquerda-15'>Bimestre: @Model.Bimestre</td>
                        <td width='60%' class='sem-border-top espaco-esquerda-15'>USUÁRIO: @Model.Usuario</td>
                    </tr>
                </tbody>
            </table>
            <table>
                <tbody>
                    <tr>
                        <td width='50%' class='sem-border-top espaco-esquerda-15'>RF: @Model.RF</td>
                        <td width='50%' class='sem-border-top espaco-esquerda-15'>DATA DE IMPRESSÃO: @Model.Data</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }

    string EspacoEmBranco()
    {
        if (quebrou)
        {
            return "";
        }

        return @"<table><tbody><tr><td height='17px' width='100%' class='tabela-cabecalho sem-border-bottom sem-border-top'></td></tr></tbody></table>";
    }

    bool VerificaQuebra(int numeroLinhasDescricao = 0)
    {
        if (contadorQuebrarPagina + numeroLinhasDescricao >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = 0;
            contadorQuebrarPagina = contadorQuebrarPagina + 1;
            quebrou = true;
            return true;
        }
        quebrou = false;
        return false;
    }

    string MontarTituloPrincipal(string turmaDescricao)
    {
        <tr>
            <td colspan="3" class="fundo-cinza">@turmaDescricao @contadorQuebrarPagina</td>
        </tr>

        return "";
    }

    string MontarCabecalhoDados()
    {
        <tr>
            <td class="fundo-cinza">TURMA</td>
            <td class="fundo-cinza">
                FECHAMENTO <br />
                <span>QUANTIDADE DE COMPONENTES CURRICULARES POR SITUAÇÃO</span>
            </td>
            <td class="fundo-cinza">
                CONSELHO DE CLASSE <br />
                <span>QUANTIDADE DE ESTUDANTES POR SITUAÇÃO</span>
            </td>
        </tr>
        return "";
    }
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RELATÓRIO DE ACOMPANHAMENTO DO FECHAMENTO</title>
</head>
<body class="body-relatorio">
    <style>
        .tblTopo th, td {
            padding: 3px;
            text-align: left;
        }

        .body-relatorio {
            margin: 0.5cm auto;
            font-family: Roboto, sans-serif;
            width: 21cm;
            min-height: 29.7cm;
            background: white;
            color: #42474a;
        }

        .titulo-sgp {
            text-align: right;
            font-size: 14px;
            font-weight: bold;
        }

        .titulo-relatorio {
            text-align: right;
            font-size: 14.5px;
            margin-top: 7px;
        }

        .subtitulo-relatorio {
            text-align: right;
            font-size: 12.5px;
            margin-top: 7px;
        }

        .header-pagina {
            margin-top: 33px;
            margin-bottom: 22px;
        }

        .header-pagina td {
            text-align: left;
        }

        table {
            display: table;
            width: 100%;
            border-color: #42474a;
            empty-cells: show;
            border: none;
            border-collapse: collapse;
        }

        thead {
            background-color: #f3f3f3;
        }

        th {
            border: 1px solid #42474a;
            font-weight: normal;
        }

        td {
            border: 1px solid #42474a;
            text-align: center;
        }

        td span {
            font-size: 12px;
        }

        .tabela-cabecalho tr {
            font-size: 14px;
            height: 24px;
        }

        .mt-25 {
            margin-top: 25px;
        }

        .fonte-14 {
            font-size: 14px !important;
        }

        .alinhar-esquerda {
            text-align: left;
        }

        .espaco-esquerda-15 {
            padding-left: 15px;
        }

        .fundo-cinza {
            background-color: #f3f3f3;
        }

        .negrito {
            font-weight: bold;
        }

        .sem-border-bottom {
            border-bottom: 0;
        }

        .sem-border-top {
            border-top: 0;
        }

        .thLimpo {
            background-color: #ffffff;
            border: 0;
            height: 22px;
        }

        .img-logo-sgp {
            height: 64px;
            float: left;
        }

        .centralizar {
            text-align: center;
        }

        .linha-pendencias {
            height: 17px !important;
            font-size: 12px !important;
        }
    </style>
    <div>
        @{
            MontarCabecalho();

            int contadorUes = 0;
            foreach (var ues in Model.Ues)
            {
                int contadorTurmas = 0;
                foreach (var turmas in ues.Turmas)
                {
                    var nomeUe = ues.NomeUe;
                    var turmaDescricao = turmas.TurmaDescricao;
                   <table class="tabela-cabecalho">
                        @if(!String.IsNullOrEmpty(nomeUe))
                        {
                            @Html.Raw(MontarTituloPrincipal(nomeUe))
                        }
                       
                        @if(!String.IsNullOrEmpty(turmaDescricao))
                        {
                            @Html.Raw(MontarTituloPrincipal(turmaDescricao))
                        }

                        @{int contadorBimestres = 0;}
                        @foreach (var bimestres in turmas.Bimestres)
                        {
                            var bimestre = bimestres.Bimestre;

                            @if (!String.IsNullOrEmpty(bimestre))
                            {
                                @Html.Raw(MontarTituloPrincipal(bimestre))
                            }

                       <tbody>
                           @if (contadorBimestres == 0)
                           { 
                                @Html.Raw(MontarCabecalhoDados())
                           }

                           @foreach (var fechamentoConselhoClasseConsolidado in bimestres.FechamentoConselhoClasseConsolidado)
                           {
                               <tr>
                                   @if (!String.IsNullOrEmpty(fechamentoConselhoClasseConsolidado.NomeTurma))
                                   {
                                       <td>@fechamentoConselhoClasseConsolidado.NomeTurma</td>
                                   }
                                   else
                                   {
                                       <td></td>
                                   }

                                   @if (fechamentoConselhoClasseConsolidado.FechamentoConsolidado.Count() > 0)
                                   {
                                       var naoIniciadoFechamento = fechamentoConselhoClasseConsolidado.FechamentoConsolidado.FirstOrDefault().NaoIniciado;
                                       var processadoComPendencia = fechamentoConselhoClasseConsolidado.FechamentoConsolidado.FirstOrDefault().ProcessadoComPendencia;
                                       var processadoComSucesso = fechamentoConselhoClasseConsolidado.FechamentoConsolidado.FirstOrDefault().ProcessadoComSucesso;

                                       <td>
                                           Não iniciado: @naoIniciadoFechamento Processado com pendência: @processadoComPendencia<br />
                                           Processado com sucesso: @processadoComSucesso
                                       </td>
                                   }
                                   else
                                   {
                                       <td></td>
                                   }
                                   @if (fechamentoConselhoClasseConsolidado.ConselhoDeClasseConsolidado.Count() > 0)
                                   {
                                       var naoIniciadoConselhoClasse = fechamentoConselhoClasseConsolidado.ConselhoDeClasseConsolidado.FirstOrDefault().NaoIniciado;
                                       var emAndamento = fechamentoConselhoClasseConsolidado.ConselhoDeClasseConsolidado.FirstOrDefault().EmAndamento;
                                       var concluido = fechamentoConselhoClasseConsolidado.ConselhoDeClasseConsolidado.FirstOrDefault().Concluido;

                                       <td>
                                           Não iniciado: @naoIniciadoConselhoClasse Em andamento: @emAndamento Concluído: @concluido
                                       </td>
                                   }
                                   else
                                   {
                                       <td></td>
                                   }
                               </tr>
                           }
                       </tbody>
                        }
                    </table>

                    contadorTurmas++;
                }
                contadorUes++;
            }
        }
    </div>
</body>
</html>
