@model SME.SR.Infra.GraficoBarrasVerticalDto

<style type="text/css">
    @{
        <text>
    #chartcontainer_@(Model.IdParaLastro) {

        height: @(Model.EixoYConfiguracao.ValorTotalAltura)px;
        width: @(Model.LarguraTotal )px;
        </text>
        }
    }
</style>
<script type="text/javascript">
    @{
        <text>
    var studentexamdata_@(Model.IdParaLastro) = new Array();
    </text>
        for (int i = 0; i < Model.EixosX.Count; i++)
        {
            var item = Model.EixosX[i];
            <text>
            studentexamdata_@(Model.IdParaLastro)[@(i)] = "@(Html.Raw(item.Titulo)),@(item.Valor)";
            </text>

        }

  <text>
    var svg_@(Model.IdParaLastro);
    var svgWidth_@(Model.IdParaLastro), svgHeight_@(Model.IdParaLastro), svgMargin_@(Model.IdParaLastro), svgSpace_@(Model.IdParaLastro);
    var MarginSpace_@(Model.IdParaLastro), MarginHeight_@(Model.IdParaLastro);
    var barchartWidth_@(Model.IdParaLastro), barchartMargin_@(Model.IdParaLastro), totalChartBars_@(Model.IdParaLastro), maximumDataValue_@(Model.IdParaLastro);
    var LabelOnYAxis_@(Model.IdParaLastro);



    function drawBarChart_@(Model.IdParaLastro)() {

        svg_@(Model.IdParaLastro) = document.getElementById('svgcontainer_@(Model.IdParaLastro)');

            ChartSettings_@(Model.IdParaLastro)();
            drawAxis_@(Model.IdParaLastro)();
            drawChart_@(Model.IdParaLastro)("Bar");
        }

    function ChartSettings_@(Model.IdParaLastro)() {
        svgMargin_@(Model.IdParaLastro) = 20;
        svgSpace_@(Model.IdParaLastro) = (studentexamdata_@(Model.IdParaLastro).length * 12) + 85;

        svgHeight_@(Model.IdParaLastro) = svg_@(Model.IdParaLastro).height.baseVal.value - ((svg_@(Model.IdParaLastro).height.baseVal.value/100) * 33);
        svgWidth_@(Model.IdParaLastro) = svg_@(Model.IdParaLastro).width.baseVal.value - svgSpace_@(Model.IdParaLastro) - 45;

        MarginSpace_@(Model.IdParaLastro) = svgMargin_@(Model.IdParaLastro) + svgSpace_@(Model.IdParaLastro);
        MarginHeight_@(Model.IdParaLastro) = svgMargin_@(Model.IdParaLastro) + svgHeight_@(Model.IdParaLastro);

        barchartMargin_@(Model.IdParaLastro) = 10;
        totalChartBars_@(Model.IdParaLastro) = studentexamdata_@(Model.IdParaLastro).length;
        barchartWidth_@(Model.IdParaLastro) = (svgWidth_@(Model.IdParaLastro) / totalChartBars_@(Model.IdParaLastro)) - barchartMargin_@(Model.IdParaLastro);

        maximumDataValue_@(Model.IdParaLastro) = @(Model.EixoYConfiguracao.ValorMaximoEixo);


        LabelOnYAxis_@(Model.IdParaLastro) = @(Model.EixoYConfiguracao.DivisoesDoEixo);

        }

    function drawAxis_@(Model.IdParaLastro)() {
        //Y-Axis
        drawXYAxis_@(Model.IdParaLastro)(MarginSpace_@(Model.IdParaLastro), MarginHeight_@(Model.IdParaLastro), MarginSpace_@(Model.IdParaLastro), svgMargin_@(Model.IdParaLastro));
        //X-Axis
        drawXYAxis_@(Model.IdParaLastro)(MarginSpace_@(Model.IdParaLastro), MarginHeight_@(Model.IdParaLastro), MarginSpace_@(Model.IdParaLastro) + barchartWidth_@(Model.IdParaLastro) + 800, MarginHeight_@(Model.IdParaLastro));
        drawMarkers_@(Model.IdParaLastro)(MarginSpace_@(Model.IdParaLastro));
    }

    function drawXYAxis_@(Model.IdParaLastro)(x1, y1, x2, y2) {
        var newdataAxis = document.createElementNS("http://www.w3.org/2000/svg", 'line');
        newdataAxis.setAttribute("x1", x1);
        newdataAxis.setAttribute("y1", y1);
        newdataAxis.setAttribute("x2", x2);
        newdataAxis.setAttribute("y2", y2);
        newdataAxis.style.stroke = "black";
        newdataAxis.style.strokeWidth = "2px";

        svg_@(Model.IdParaLastro).appendChild(newdataAxis);

    }

    function drawMarkers_@(Model.IdParaLastro)(x1) {
      //Legendas  verticais
        var textelementLegenda = document.createElementNS("http://www.w3.org/2000/svg", 'text');

        textelementLegenda.setAttributeNS(null, 'transform', 'rotate(-90) translate(' + - 250 + ' , ' + 10 + ')');

        textelementLegenda.setAttributeNS(null, 'font-size', 13);
        textelementLegenda.setAttributeNS(null, 'font-weight', 'bold');
        var txtnodeLegenda = document.createTextNode('Legendas');
        textelementLegenda.appendChild(txtnodeLegenda);
        svg_@(Model.IdParaLastro).appendChild(textelementLegenda);

        //Texts Legendas

        svg_@(Model.IdParaLastro).appendChild(createSVGtextLegendas('@Html.Raw(Model.DescricaoLegenda)', 265, -250));

        var totalChartBarsForLoop = totalChartBars_@(Model.IdParaLastro)
                 </text>
                 }

            for (var i = 0; i < totalChartBarsForLoop; i++)
            {
                   @{
                    <text>
                arrVal = studentexamdata_@(Model.IdParaLastro)[i].split(",");
                name = arrVal[0];
                markerXPosition = MarginSpace_@(Model.IdParaLastro) + barchartMargin_@(Model.IdParaLastro) + (i * (barchartWidth_@(Model.IdParaLastro) + barchartMargin_@(Model.IdParaLastro))) + (barchartWidth_@(Model.IdParaLastro) / 2) + 10;
                markerYPosition = MarginHeight_@(Model.IdParaLastro) + 20 ;
                //textelement = document.createElementNS("http://www.w3.org/2000/svg", 'text');
                var elementText = createSVGtext(name, markerXPosition, markerYPosition)


                svg_@(Model.IdParaLastro).appendChild(elementText);


            }
    }

    function createSVGtextLegendas(caption, x, y) {

        //  This function attempts to create a new svg "text" element, chopping
        //  it up into "tspan" pieces, if the caption is too long
        //
        var svgSwitch = document.createElementNS('http://www.w3.org/2000/svg', 'switch');
        svgSwitch.setAttributeNS(null, 'transform', 'rotate(-90) translate(' + y + ' , ' + x + ')');
        svgSwitch.setAttributeNS(null, 'font-size', 10);
        svgSwitch.setAttribute('width', 250);
        svgSwitch.setAttribute('height', 200);

        var svgForeignObject = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject');
        svgForeignObject.setAttributeNS(null, 'x', 0);
        svgForeignObject.setAttributeNS(null, 'y', y);
        svgForeignObject.setAttribute('width', 250);
        svgForeignObject.setAttribute('height', 200);

        //  The following two variables should really be passed as parameters
        var LINE_HEIGHT = 12;

        var words = caption.split("||");
        var line = "";

        for (var n = 0; n < words.length; n++) {
            //if (testLine.length > MAXIMUM_CHARS_PER_LINE) {
                //  Add a new <tspan> element
            var svgSpan = document.createElementNS('http://www.w3.org/1999/xhtml', 'span');
            svgSpan.setAttributeNS(null, 'style', 'margin-bottom: 2px; display: inline-block');
            var svgBr = document.createElementNS('http://www.w3.org/1999/xhtml', 'br');
                //svgTSpan.setAttributeNS(null, 'transform', 'rotate(90) translate(' + y + ' , ' + x + ')');

            var tSpanTextNode = document.createTextNode(line);
            svgSpan.appendChild(tSpanTextNode);
                //svgSwitch.appendChild(svgTSpan);

            svgForeignObject.appendChild(svgSpan);
            svgForeignObject.appendChild(svgBr);

                line = words[n] + " ";
                y += LINE_HEIGHT;
            //}
        }

        var svgSpan = document.createElementNS('http://www.w3.org/1999/xhtml', 'span');
        var tSpanTextNode = document.createTextNode(line);
        svgSpan.appendChild(tSpanTextNode);
        svgForeignObject.appendChild(svgSpan);

        svgSwitch.appendChild(svgForeignObject);

        return svgSwitch;
    }

 function createSVGtext(caption, x, y) {
    //  This function attempts to create a new svg "text" element, chopping
    //  it up into "tspan" pieces, if the caption is too long
    //
    var svgText = document.createElementNS('http://www.w3.org/2000/svg', 'text');
    //svgText.setAttributeNS(null, 'transform', 'rotate(90) translate(' + y + ' , ' + - x + ')');
    svgText.setAttributeNS(null, 'x', x);
    svgText.setAttributeNS(null, 'y', y);
    svgText.setAttributeNS(null, 'font-size', 10);
    svgText.setAttributeNS(null, 'text-anchor', 'middle');   //  Center the text

    //  The following two variables should really be passed as parameters
    var MAXIMUM_CHARS_PER_LINE = 10;
    var LINE_HEIGHT = 16;

    var words = caption.split(" ");
    var line = "";

    for (var n = 0; n < words.length; n++) {
        var testLine = line + words[n] + " ";
        if (testLine.length > MAXIMUM_CHARS_PER_LINE)
        {
            //  Add a new <tspan> element
            var svgTSpan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');
            svgTSpan.setAttributeNS(null, 'x', x);
            svgTSpan.setAttributeNS(null, 'y', y);

            var tSpanTextNode = document.createTextNode(line);
            svgTSpan.appendChild(tSpanTextNode);
            svgText.appendChild(svgTSpan);

            line = words[n] + " ";
            y += LINE_HEIGHT;
        }
        else {
            line = testLine;
        }
    }

    var svgTSpan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');
    svgTSpan.setAttributeNS(null, 'x', x);
    svgTSpan.setAttributeNS(null, 'y', y);

    var tSpanTextNode = document.createTextNode(line);
    svgTSpan.appendChild(tSpanTextNode);

    svgText.appendChild(svgTSpan);

    return svgText;
}
    function drawRectangleForChart_@(Model.IdParaLastro)(x, y, wd, ht, fill, i) {
        var rect = document.createElementNS("http://www.w3.org/2000/svg", 'rect');
        rect.setAttributeNS(null, 'x', x);
        rect.setAttributeNS(null, 'y', y);
        rect.setAttributeNS(null, 'width', wd);
        rect.setAttributeNS(null, 'height', ht);
        rect.setAttributeNS(null, 'fill', "#f3f3f3");

        svg_@(Model.IdParaLastro).appendChild(rect);

        //Novo Marcador para exibir numero acima
        var arrVal = studentexamdata_@(Model.IdParaLastro)[i].split(",");
        var valueOfTextY = arrVal[1];
        var elementNewTextY = createSVGtext(valueOfTextY, x + (wd/2), y - 2)

        svg_@(Model.IdParaLastro).appendChild(elementNewTextY);

    }

    function drawEllipse(x, y, rx) {
        var circle = document.createElementNS("http://www.w3.org/2000/svg", 'circle');
        circle.setAttributeNS(null, 'cx', x);
        circle.setAttributeNS(null, 'cy', y);
        circle.setAttributeNS(null, 'r', rx);
        circle.setAttributeNS(null, 'fill', "darkred");
        svg.appendChild(circle);
    }

    function drawChart_@(Model.IdParaLastro)(chart) {
        var totalChartsBarsForDrawChart = totalChartBars_@(Model.IdParaLastro)
       </text>
    }
        for (var i = 0; i < totalChartsBarsForDrawChart; i++) {
                @{
       <text>
            var arrchartVal = studentexamdata_@(Model.IdParaLastro)[i].split(",");
                bcVal = parseInt(arrchartVal[1]);
                bcHt = (bcVal * svgHeight_@(Model.IdParaLastro) / maximumDataValue_@(Model.IdParaLastro));
            bcX = MarginSpace_@(Model.IdParaLastro) + (i * (barchartWidth_@(Model.IdParaLastro) + barchartMargin_@(Model.IdParaLastro))) + barchartMargin_@(Model.IdParaLastro) + 10;
            bcY = (MarginHeight_@(Model.IdParaLastro) - bcHt - 2);
            switch (chart) {
                case "Bar":
                    drawRectangleForChart_@(Model.IdParaLastro)(bcX, bcY, barchartWidth_@(Model.IdParaLastro), bcHt, true, i);
                    break;

                case "Point":
                    drawEllipse(bcX, bcY, 5, 5);
                    break;
            }
        }
    }

   </text>
        }
</script>
@{

    <text>
        <div id="chartcontainer_@(Model.IdParaLastro)" style="text-align:left">
            <h2 style="text-align:center; margin-top: 0; margin-bottom: 5px; font-weight: lighter;">@(Model.Titulo)</h2>
            <svg id="svgcontainer_@(Model.IdParaLastro)" height="@Model.EixoYConfiguracao.ValorTotalAltura" width="@(Model.LarguraTotal - 50)">
            </svg>
    </text>
}
</div>
