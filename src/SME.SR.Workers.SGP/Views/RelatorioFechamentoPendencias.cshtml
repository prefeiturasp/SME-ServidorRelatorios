@model SME.SR.Infra.RelatorioFechamentoPendenciasDto

@{
    
    int contadorQuebrarPagina = 0;
    int contadorMaximoLinhasPorPagina = 48;
    int contadorPagina = 0;

    string VerificaQuebra()
    {
        if (contadorQuebrarPagina >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = 0;
            contadorPagina = contadorPagina + 1;

            var str = MontarCabecalho();
            return  $@"<div style='page-break-before:always' />" + str;

        }
        return string.Empty;

    }


    Microsoft.AspNetCore.Html.IHtmlContent MontarLinhaPendencia(string descricao, string[] detalhamentos, bool mostraDetalhe, string usuario, string aprovador, string usuarioRf, string aprovadorRf, string status)
    {
        // Contar
        var str = $@"
<table class='tabela-alunos'>
    <thead>
        <th style='width: 100%;'>DESCRIÇÃO DA PENDÊNCIA</th>
   </thead>
    <tbody>
        <tr>
            <td colspan='4' style='border-bottom: none;border-top: none;' >{descricao}</td>
        </tr>
   </tbody>";
        contadorQuebrarPagina = contadorQuebrarPagina + 2;
          //var quebra = VerificaQuebra();

        if (mostraDetalhe)
        {
            str = str + $@"<table class='tabela-alunos'>
            <thead>
                <th style='width: 100%;'>DETALHE DA PENDÊNCIA</th>     
           </thead>
            <tbody><tr>
                    <td colspan='4' style='border-top: none;' >";

            for (int i = 0; i < detalhamentos.Length; i++)
            {
                str = str + $@"{detalhamentos[i]}";
                contadorQuebrarPagina = contadorQuebrarPagina + 1;
                var quebra = VerificaQuebra();
                if (!string.IsNullOrEmpty(quebra))
                {
                       str = str + $@"</td></tr></tbody></table>";
                    str = str + quebra;
                    str = str + $@"<table class='tabela-alunos'>
                                    <thead>
                                        <th style='width: 100%;'>DETALHE DA PENDÊNCIA</th>     
                                   </thead>
                                    <tbody><tr>
                    <td colspan='4' style='border-top: none;' >";    
                    contadorQuebrarPagina = contadorQuebrarPagina + 1;
                }
            }

            str = str + $@"</td></tr></tbody></table>";
        }

        str = str + $@"<table class='tabela-alunos'>
    <thead>
        <th style='width: 10%;'>Situação:</th>
        <th style='width: 10%;'>{status}</th>
        <th style='width: 10%;' class='thLimpo'>Usuário:</th>
        <th style='width: 30%;' class='thLimpo'>{usuario}</th>
        <th style='width: 10%;' class='thLimpo'>Aprovação:</th>
        <th style='width: 30%;' class='thLimpo'>{aprovador}</th>
   </thead>
    <tbody>
        <tr>
            <td colspan='2' style='border-top: none;'></td>
            <td colspan='1' style='border-top: none;'>RF:</td>
            <td colspan='1' style='border-top: none;'>{usuarioRf}</td>
            <td colspan='1' style='border-top: none;'>RF:</td>
            <td colspan='1' style='border-top: none;'>{aprovadorRf}</td>

        </tr>
        <tr>
            <td colspan='6' height='5px' class='thLimpo'></td>
        </tr>
   </tbody>
</table>";

        contadorQuebrarPagina = contadorQuebrarPagina + 3;

        str = str + VerificaQuebra();

        return Html.Raw(str);
    }
    string MontarCabecalho()
    {
        contadorQuebrarPagina = contadorQuebrarPagina + 8;
        var str =
           $@"<div>
        <img class='img-logo-sgp' src='logoMono.png' alt='Logo SGP' /> 
        </div>
        <div class='titulo-sgp'>SGP - SISTEMA DE GESTÃO PEDAGÓGICA</div>
        <div class='titulo-faltas-frequencia'>RELATÓRIO DE PENDÊNCIAS</div>
        <div class='fonte-14 header-pagina'>
        <table class='tblTopo'>
        <tbody>
        <tr>
        <td  width='40%' >DRE: {Model.DreNome}</td>
        <td width='40%' >UE: {Model.UeNome}</td>
        <td  width='20%' >ANO LETIVO: {Model.Ano}</td>
        </tr>
        </tbody>
        </table>

        <table>
        <tbody>
        <tr>
        <td class='campo-bimestre'>MODALIDADE: {Model.Modalidade}</td>
        <td class='campo-bimestre'>SEMESTRE: {Model.Semestre}</td>
        <td class='campo-bimestre'>TURMA: {Model.TurmaNome}</td>

        </tr>
        </tbody>
        </table>

        <table>
        <tbody>
        <tr>
        <td class='campo-componente-curricular'>
        COMPONENTE CURRICULAR: {Model.ComponenteCurricular}
        </td>
        <td class='campo-bimestre'>BIMESTRE: {Model.Bimestre}</td>
        </tr>
        </tbody>
        </table>
        <table>
        <tbody>
        <tr>
        <td class='campo-usuario'>PROFESSOR: {Model.Usuario}</td>
        <td class='campo-rf-data'>RF: {Model.RF}</td>
        <td class='campo-rf-data'>DATA: {Model.Data}</td>
        </tr>
        </tbody>
        </table>
        </div>
        ";

        return str;
    }


}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Relatório Fechamento e Pendências</title>
</head>
<body class="body-rel-faltas-frequencia">
    <style>
        tblTopo th, td {
            padding: 3px 0px 3px 15px;
            text-align: left;
        }

        .body-rel-faltas-frequencia {
            margin: 0.5cm auto;
            font-family: Roboto, sans-serif;
            width: 21cm;
            min-height: 29.7cm;
            background: white;
            color: #42474a;
        }

        .titulo-sgp {
            text-align: right;
            font-size: 14px;
            font-weight: bold;
        }

        .titulo-faltas-frequencia {
            text-align: right;
            font-size: 14.5px;
            margin-top: 7px;
        }

        .img-logo-sgp {
            height: 64px;
            float: left;
        }

        .header-pagina {
            margin-top: 33px;
            margin-bottom: 22px;
        }

            .header-pagina td {
                text-align: left;
            }

        .campo-dre {
            width: 25%;
        }

        .campo-ue {
            width: 60%
        }

        .campo-ano {
            width: 15%
        }

        .campo-bimestre {
            width: 20%;
            border-top: none;
        }

        .campo-componente-curricular {
            width: 80%;
            border-top: none;
        }

        .campo-usuario {
            width: 60%;
            border-top: none;
        }

        .campo-rf-data {
            width: 20%;
            border-top: none;
        }

        table {
            display: table;
            width: 100%;
            border-color: #42474a;
            empty-cells: show;
            border: none;
            border-collapse: collapse;
        }

        thead {
            background-color: #f3f3f3;
        }

        th {
            border: 1px solid #42474a;
            font-weight: normal;
        }

        td {
            border: 1px solid #42474a;
            text-align: center;
        }

        .tabela-alunos tr {
            font-size: 12px;
            height: 24px;
        }

        .mt-25 {
            margin-top: 25px;
        }

        .fonte-14 {
            font-size: 14px !important;
        }

        .alinhar-esquerda {
            text-align: left;
        }

        .rodape-rel-faltas-frequencia {
            margin-top: 10px;
            font-size: 9px;
            font-weight: bold;
        }

        .titulo-sgp-rodape {
            float: left;
        }

        .contador-pagina {
            float: right;
            font-size: 15px;
        }

        .thLimpo {
            background-color: #ffffff;
        }
    </style>
    <div>
        @{
            @Html.Raw(MontarCabecalho())

            for (int a = 0; a < Model.Dre.Ue.Turmas.Count; a++)
            {

                @if (Model.Dre.Ue.Turmas[a].Bimestres != null)
                {

                    foreach (var bimestre in Model.Dre.Ue.Turmas[a].Bimestres)
                    {

                        if (Model.TurmaNome == "Todas")
                        {
                            var turma = Model.Dre.Ue.Turmas[a];
                            <table class="tabela-alunos">
                                <thead>

                                    <tr>
                                        <th>@turma.Nome</th>
                                    </tr>
                                </thead>
                            </table>
                            contadorQuebrarPagina = contadorQuebrarPagina + 1;
                            @Html.Raw(VerificaQuebra())
                        }

                        @if (bimestre.Componentes != null)
                        {
                            if (Model.Bimestre == "Todos")
                            {
                                <table class="tabela-alunos">
                                    <thead>
                                        <tr>
                                            <th>@bimestre.Nome</th>
                                        </tr>                                        
                                    </thead>
                                </table>
                                contadorQuebrarPagina = contadorQuebrarPagina + 1;
                                @Html.Raw(VerificaQuebra())
                            }

                            for (int c = 0; c < bimestre.Componentes.Count; c++)
                            {
                                var componente = bimestre.Componentes[c];

                                if (Model.ComponenteCurricular == "Todos")
                                {
                                    <table class="tabela-alunos">
                                        <thead>
                                            <tr>
                                                <th style="border-bottom:0">@componente.NomeComponente</th>
                                            </tr>
                                        </thead>
                                    </table>

                                    contadorQuebrarPagina = contadorQuebrarPagina + 1;
                                    @Html.Raw(VerificaQuebra())
                                }

                                if (componente.Pendencias != null)
                                {

                                    for (int i = 0; i < componente.Pendencias.Count; i++)
                                    {
                                        var pendencia = componente.Pendencias[i];
                                        @MontarLinhaPendencia(pendencia.DescricaoPendencia, pendencia.DetalhamentoPendenciaArray, Model.ExibeDetalhamento, pendencia.NomeUsuario, pendencia.NomeUsuarioAprovacao, pendencia.CodigoUsuarioRf, pendencia.CodigoUsuarioAprovacaoRf, pendencia.Situacao)
                                    }

                                }
                            }
                        }
                    }
                }
            }
        }

    </div>
</body>
</html>