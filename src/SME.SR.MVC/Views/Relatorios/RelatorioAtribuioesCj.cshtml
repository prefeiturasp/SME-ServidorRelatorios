

@model SME.SR.Infra.RelatorioAtribuicaoCjDto

@{
    int contadorQuebrarPagina = 0;
    bool ehRelatorioPorTurma = false;
    int contadorPagina = 0;
    var linhaFinal = $@"
                        <table class='tabela-cabecalho'>
                            <tr>
                                <td width='100%' class='somente-border-top'> </td>
                            </tr>
                        </tbody></table>
                        ";
    var contadorEspacoFino = 0;


    int contadorMaximoLinhasPorPagina = 58;

    string VerificaQuebra()
    {
        if (contadorQuebrarPagina >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = 0;
            contadorEspacoFino = 0;
            contadorPagina = contadorPagina + 1;
            return linhaFinal + " <div style='page-break-before:always'></div>" + MontarCabecalho();
        }
        return "";
    }

    string MontarCabecalho()
    {
        contadorQuebrarPagina = contadorQuebrarPagina + 9;
        var str =
            $@"<div>
<img class='img-logo-sgp' src='logoMono.png' alt='Logo SGP' />
</div>
<div class='titulo-sgp'>SGP - SISTEMA DE GESTÃO PEDAGÓGICA</div>
<div class='titulo-relatorio'> RELATÓRIO DE ATRIBUIÇÃO CJ</div>
<div class='fonte-14 header-pagina'>
<table class='tblTopo'>
<tbody>
<tr>
<td  width='50%' class='espaco-esquerda-15 sem-border-bottom'>DRE: {Model.DreNome}</td>
<td width='50%' class='espaco-esquerda-15 sem-border-bottom'>UE: {Model.UeNome}</td>
</tr>
</tbody>
</table>
<table>
<tbody>
<tr>
<td width='34%' class='espaco-esquerda-15 sem-border-bottom'>MODALIDADE: {Model.Modalidade}</td>
<td width='33%' class='espaco-esquerda-15 sem-border-bottom'>SEMESTRE: {Model.Semestre}</td>
<td  width='33%' class='espaco-esquerda-15 sem-border-bottom'>TURMA: {Model.Turma}</td>
</tr>
</tbody>
</table>
<table>
<tbody>
<tr>
<td  width='67%' class='espaco-esquerda-15 sem-border-bottom'>PROFESSOR: {Model.Professor}</td>
<td  width='33%' class='espaco-esquerda-15 sem-border-bottom'>RF: {Model.RfProfessor}</td>
</tr>
</tbody>
</table>
<table>
<tbody>
<tr>
<td  width='45%' class='espaco-esquerda-15'>USUÁRIO: {Model.Usuario}</td>
<td width='22%' class='espaco-esquerda-15'>RF: {Model.RfUsuario}</td>
<td width='33%' class='espaco-esquerda-15'>DATA DE IMPRESSÃO: {Model.DataImpressao}</td>
</tr>
</tbody>
</table>
</div>
";

        return str;
    }

    string MontaCabecalhoAtribuicaoEsporadica()
    {
        contadorQuebrarPagina ++;
        var quebra = VerificaQuebra();
        var str = $@"{quebra}
        <table class='tabela-cabecalho'>
            <thead>
                <tr>
                    <td class='centralizar negrito sem-border-bottom' width='100%'>
                        ATRIBUIÇÕES ESPORÁDICAS
                    </td>
                </tr>
            </thead>
        </table>
        <table class='tabela-cabecalho'>
        <thead>
            
            <tr>
                <td class='centralizar sem-border-bottom' width='17%'>
                    USUÁRIO
                </td>
                <td width='16%' class='centralizar sem-border-bottom'>
                    CARGO
                </td>
                <td width='16%' class='centralizar sem-border-bottom'>
                    DATA DE INÍCIO
                </td>
                <td width='17%' class='centralizar sem-border-bottom'>
                    DATA DE FIM
                </td>
                <td width='17%' class='centralizar sem-border-bottom'>
                    DATA DA ATRIBUIÇÃO
                </td>
                <td width='17%' class='centralizar sem-border-bottom'>
                    ATRIBUÍDO POR
                </td>
            </tr>
        </thead>
        </table>";

        return str;
    }

    string MontarLinhasAtribuicaoEsporadica(SME.SR.Infra.AtribuicaoEsporadicaDto dto)
    {
        var totalLinhas = new List<int>();
        totalLinhas.Add((dto.NomeUsuario.Length / 15) + 1);
        totalLinhas.Add((dto.Cargo.Length / 15) + 1);
        totalLinhas.Add((dto.AtribuidoPor.Length / 15) +1);
        var linhas = totalLinhas.Max();
        var str = "";
        contadorQuebrarPagina += linhas;
        var quebra = VerificaQuebra();
        if (!string.IsNullOrEmpty(quebra))
        {

            str += $@"</tbody></table>{quebra}
                    {MontaCabecalhoAtribuicaoEsporadica()} 
                    <table class='tabela-cabecalho'>
                      <tbody>";
        }
        str += $@"
            <tr>
                <td width='17%'>{dto.NomeUsuario}</td>
                <td width='16%'>{dto.Cargo}</td>
                <td width='16%'>{dto.DataInicio}</td>
                <td width='17%'>{dto.DataFim}</td>
                <td width='17%'>{dto.DataAtribuicao}</td>
                <td width='17%'>{dto.AtribuidoPor}</td>
            </tr>
        ";
        return str;
    }

    string EspacoEmBranco(bool ehEspacoMaior=true)
    {
        if (ehEspacoMaior)
        {
            contadorQuebrarPagina++;
        }
        else
        {
            contadorEspacoFino++;
            if(contadorEspacoFino == 2)
            {
                contadorQuebrarPagina++;
                contadorEspacoFino = 0;
            }
        }
        if (contadorQuebrarPagina + 1 >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = contadorMaximoLinhasPorPagina;
        }
        var quebra = VerificaQuebra();
        var tamanho = ehEspacoMaior ? "20px" : "5px";
        var str = $@"<table><tbody><tr><td height='{tamanho}' width='100%' class='tabela-cabecalho sem-border-bottom sem-border-top'> </td></tr></tbody></table>";
        if (!string.IsNullOrEmpty(quebra))
        {
            return quebra;
        }
        return str;
    }

    string MontaCabecalhoAtribuicaoCjProfessor()
    {
        contadorQuebrarPagina += 2;
        var quebra = VerificaQuebra();
        var str = $@"{quebra}
        <table class='tabela-cabecalho'>
            <thead>
                <tr>
                    <td class='centralizar negrito sem-border-bottom' width='100%'>
                        ATRIBUIÇÕES DE CJ
                    </td>
                </tr>
            </thead>
        </table>
        <table class='tabela-cabecalho'>
        <thead>
            
            <tr>
                <td class='centralizar sem-border-bottom' width='25%'>
                    TURMA
                </td>
                <td width='25%' class='centralizar sem-border-bottom'>
                    COMPONENTE CURRICULAR
                </td>
                <td width='25%' class='centralizar sem-border-bottom'>
                    PROFESSOR TITULAR
                </td>
                <td width='25%' class='centralizar sem-border-bottom'>
                    DATA DA ATRIBUIÇÃO
                </td>
            </tr>
        </thead>
        </table>";
        contadorQuebrarPagina += 2;

        return str;
    }

    string MontarCabecalhoNomeProfessorTurma(string nome)
    {
        contadorQuebrarPagina++;
        if (VerificaFimPaginaPorLinhas(3))
        {
            contadorQuebrarPagina = contadorMaximoLinhasPorPagina;
        }
        var quebra = VerificaQuebra();
        var textoQuebra = !string.IsNullOrEmpty(quebra)? quebra+(ehRelatorioPorTurma? MontaCabecalhoAtribuicaoCjTurma():MontaCabecalhoAtribuicaoCjProfessor()) : "";
        return $@"{textoQuebra}
                <table class='tabela-cabecalho'>
                    <thead>
                      <tr>
                          <td width='100%' class='centralizar sem-border-bottom negrito'>{nome}</td>
                      </tr>
                    </thead>
                 </table>";
    }

    string MontarLinhasAtribuicaoCjProfessor(SME.SR.Infra.AtribuicaoCjTurmaDto dto, string nomeProfessorTurma, bool ultimaLinha)
    {
        var str = "";
        contadorQuebrarPagina += (dto.NomeProfessorTitular.Length / 25) + 1;
        var quebra = VerificaQuebra();
        var textoQuebra = !string.IsNullOrEmpty(quebra) ? quebra + (ehRelatorioPorTurma? MontaCabecalhoAtribuicaoCjTurma():MontaCabecalhoAtribuicaoCjProfessor()) + MontarCabecalhoNomeProfessorTurma(nomeProfessorTurma) : "";
        if (!string.IsNullOrEmpty(textoQuebra))
        {
            str += textoQuebra;
        }
        str += $@"
            <table class='tabela-cabecalho'>
                <tr>
                    <td width='25%' class='sem-border-bottom'>{dto.NomeTurma}</td>
                    <td width='25%' class='sem-border-bottom'>{dto.ComponenteCurricular}</td>
                    <td width='25%' class='sem-border-bottom'>{dto.NomeProfessorTitular}</td>
                    <td width='25%' class='sem-border-bottom'>{dto.DataAtribuicao}</td>
                </tr>
            </tbody></table>
        ";
        return str;
    }

    string MontarCabecalhoAulas(string nomeProfessorTurma)
    {
        contadorQuebrarPagina++;
        if (VerificaFimPaginaPorLinhas(1))
        {
            contadorQuebrarPagina = contadorMaximoLinhasPorPagina;
        }
        var quebra = VerificaQuebra();
        var textoQuebra = !string.IsNullOrEmpty(quebra) ? quebra + (ehRelatorioPorTurma ? MontaCabecalhoAtribuicaoCjTurma() : MontaCabecalhoAtribuicaoCjProfessor())
            + MontarCabecalhoNomeProfessorTurma(nomeProfessorTurma) : "";
        return $@"{textoQuebra}
            <table class='tabela-cabecalho'>
                    <thead>
                      <tr>
                          <td width='20%' class='centralizar sem-border-bottom'>DATA AULA</td>
                          <td width='20%' class='centralizar sem-border-bottom'>AULA DADA</td>
                          <td width='60%' class='centralizar sem-border-bottom'>OBSERVAÇÕES</td>
                      </tr>
                    </thead>
                 </table>";
    }

    string MontarLinhasAula(SME.SR.Infra.AtribuicaoCjAulaDto aula, string nomeProfessorTurma)
    {
        var str = "";
        contadorQuebrarPagina += (aula.Observacoes.Length/90) +1;
        if (VerificaFimPaginaPorLinhas(1))
        {
            contadorQuebrarPagina = contadorMaximoLinhasPorPagina;
        }
        var quebra = VerificaQuebra();

        var textoQuebra = !string.IsNullOrEmpty(quebra) ?
            quebra + (ehRelatorioPorTurma ? MontaCabecalhoAtribuicaoCjTurma() : MontaCabecalhoAtribuicaoCjProfessor())
            + MontarCabecalhoNomeProfessorTurma(nomeProfessorTurma)+MontarCabecalhoAulas(nomeProfessorTurma) : "";
        if (!string.IsNullOrEmpty(textoQuebra))
        {
            str += textoQuebra;
        }
        var aulaDada = aula.AulaDada ? "Sim" : "Não";
        str += $@"
            <table class='tabela-cabecalho'>
                <tr>
                    <td width='20%' class='sem-border-bottom'>{aula.DataAula}</td>
                    <td width='20%' class='sem-border-bottom'>{aulaDada}</td>
                    <td width='60%' class='sem-border-bottom'>{aula.Observacoes}</td>
                </tr>
            </tbody></table>
        ";
        return str;
    }

    string MontaCabecalhoAtribuicaoCjTurma()
    {
        contadorQuebrarPagina += 3;
        var quebra = VerificaQuebra();
        var str = $@"{quebra}
        <table class='tabela-cabecalho'>
            <thead>
                <tr>
                    <td class='centralizar negrito sem-border-bottom' width='100%'>
                        ATRIBUIÇÕES DE CJ
                    </td>
                </tr>
            </thead>
        </table>
        <table class='tabela-cabecalho'>
        <thead>
            
            <tr>
                <td class='centralizar sem-border-bottom' width='20%'>
                    PROFESSOR CJ
                </td>
                <td width='20%' class='centralizar sem-border-bottom'>
                    COMPONENTE CURRICULAR
                </td>
                <td width='20%' class='centralizar sem-border-bottom'>
                    PROFESSOR TITULAR
                </td>
                <td width='20%' class='centralizar sem-border-bottom'>
                    DATA DA ATRIBUIÇÃO
                </td>
                <td width='20%' class='centralizar sem-border-bottom'>
                    TIPO DE CJ
                </td>
            </tr>
        </thead>
        </table>";

        return str;
    }

    string MontarLinhasAtribuicaoCjTurma(SME.SR.Infra.AtribuicaoCjProfessorDto dto, string nomeProfessorTurma, bool ultimaLinha)
    {
        var str = "";
        var totalLinhas = new List<int>();
        totalLinhas.Add((dto.NomeProfessorCj.Length / 20) + 1);
        totalLinhas.Add((dto.NomeProfessorTitular.Length / 20) + 1);
        var linhas = totalLinhas.Max();
        contadorQuebrarPagina += linhas;
        var quebra = VerificaQuebra();
        var textoQuebra = !string.IsNullOrEmpty(quebra) ? quebra + (ehRelatorioPorTurma ? MontaCabecalhoAtribuicaoCjTurma() : MontaCabecalhoAtribuicaoCjProfessor()) + MontarCabecalhoNomeProfessorTurma(nomeProfessorTurma) : "";
        if (!string.IsNullOrEmpty(textoQuebra))
        {
            str += textoQuebra;
        }
        str += $@"
            <table class='tabela-cabecalho'>
                <tr>
                    <td width='20%'class='sem-border-bottom'>{dto.NomeProfessorCj}</td>
                    <td width='20%'class='sem-border-bottom'>{dto.ComponenteCurricular}</td>
                    <td width='20%'class='sem-border-bottom'>{dto.NomeProfessorTitular}</td>
                    <td width='20%'class='sem-border-bottom'>{dto.DataAtribuicao}</td>
                    <td width='20%'class='sem-border-bottom'>{dto.TipoProfessorCj}</td>
                </tr>
            </tbody></table>
        ";
        return str;
    }

    bool VerificaFimPaginaPorLinhas(int linhasFaltando)
    {
        return (contadorQuebrarPagina + linhasFaltando) >= contadorMaximoLinhasPorPagina;
    }

    <!DOCTYPE html>
    <html lang="pt-BR">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Relatório de Atribuição de CJ</title>
    </head>
    <body class="body-relatorio">
        <style>

            .tblTopo th, td {
                padding: 3px 0;
                text-align: left;
            }

            .body-relatorio {
                margin: 0.5cm auto;
        font-family: Roboto, sans-serif;
                width: 21cm;
                min-height: 29.7cm;
                background: white;
                color: #42474a;
            }

            .titulo-sgp {
                text-align: right;
                font-size: 14px;
                font-weight: bold;
            }

            .titulo-relatorio {
                text-align: right;
                font-size: 14.5px;
                margin-top: 7px;
            }

            .header-pagina {
                margin-top: 33px;
                margin-bottom: 22px;
            }

                .header-pagina td {
        text-align: left;
    }

    table {
                display: table;
                width: 100%;
                border-color: #42474a;
                empty-cells: show;
                border: none;
                border-collapse: collapse;
            }

            thead {
                background-color: #f3f3f3;
            }

            th {
                border: 1px solid #42474a;
                font-weight: normal;
            }

            td {
                border: 1px solid #42474a;
                text-align: center;
            }

            .tabela-cabecalho tr {
        font-size: 12px;
        height: 24px;
    }

            .mt-25 {
                margin-top: 25px;
            }

            .fonte-14 {
                font-size: 14px !important;
            }

            .alinhar-esquerda {
                text-align: left;
            }

            .espaco-esquerda-15 {
                padding-left: 15px;
            }

            .fundo-cinza {
                background-color: #f3f3f3;
            }

            .negrito {
                font-weight: bold;
            }

            .sem-border-bottom {
                border-bottom: 0;
            }

            .sem-border-top {
                border-bottom: 0;
            }

            .somente-border-top {
                border-bottom: 0;
                border-left: 0;
                border-right: 0;
            }

            .thLimpo {
                background-color: #ffffff;
                border: 0;
                height: 22px;
            }

            .img-logo-sgp {
                height: 64px;
                float: left;
            }

            .centralizar {
                text-align: center;
            }
        </style>
        <div>
            @{
                @Html.Raw(MontarCabecalho())
                if (!Model.ExibirDre)
                {
                    if (Model.AtribuicoesEsporadicas?.Count() > 0)
                    {
                        @Html.Raw(MontaCabecalhoAtribuicaoEsporadica())
                        <table class='tabela-cabecalho'>
                            <tbody>
                                @for (int indexAtribuicaoExporadica = 0; indexAtribuicaoExporadica < Model.AtribuicoesEsporadicas.Count(); indexAtribuicaoExporadica++)
                                {
                                    var atribuicaoEsporadica = Model.AtribuicoesEsporadicas[indexAtribuicaoExporadica];
                                    @Html.Raw(MontarLinhasAtribuicaoEsporadica(atribuicaoEsporadica))
                                }
                            </tbody>
                        </table>
                    }
              

                @if (Model.AtribuicoesCjPorProfessor?.Count() > 0)
                {
                    ehRelatorioPorTurma = false;
                    if (Model.AtribuicoesEsporadicas?.Count() > 0)
                    {
                        @Html.Raw(EspacoEmBranco())
                    }
                    @Html.Raw(MontaCabecalhoAtribuicaoCjProfessor())
                    for (int indexAtribuicaoProfessorCj = 0; indexAtribuicaoProfessorCj < Model.AtribuicoesCjPorProfessor.Count(); indexAtribuicaoProfessorCj++)
                    {
                        var atribuicaoProfessorCj = Model.AtribuicoesCjPorProfessor[indexAtribuicaoProfessorCj];
                        @Html.Raw(MontarCabecalhoNomeProfessorTurma(atribuicaoProfessorCj.NomeProfessor))

                        @for (int indexAtribuicao = 0; indexAtribuicao < atribuicaoProfessorCj.AtribuiicoesCjTurma.Count(); indexAtribuicao++)
                        {
                            var atribuicao = atribuicaoProfessorCj.AtribuiicoesCjTurma[indexAtribuicao];
                            @Html.Raw(MontarLinhasAtribuicaoCjProfessor(atribuicao, atribuicaoProfessorCj.NomeProfessor, indexAtribuicao + 1 == atribuicaoProfessorCj.AtribuiicoesCjTurma.Count()))
                            if (atribuicao.Aulas?.Count() > 0)
                            {
                                @Html.Raw(MontarCabecalhoAulas(atribuicaoProfessorCj.NomeProfessor))
                                foreach (var aula in atribuicao.Aulas)
                                {
                                    @Html.Raw(MontarLinhasAula(aula, atribuicaoProfessorCj.NomeProfessor))
                                }
                                @Html.Raw(EspacoEmBranco(false))
                            }
                        }
                    }
                }

                @if (Model.AtribuicoesCjPorTurma?.Count() > 0)
                {
                    ehRelatorioPorTurma = true;
                    if (Model.AtribuicoesEsporadicas?.Count() > 0)
                    {
                        @Html.Raw(EspacoEmBranco())
                    }
                    @Html.Raw(MontaCabecalhoAtribuicaoCjTurma())
                    for (int indexAtribuicaoTurma = 0; indexAtribuicaoTurma < Model.AtribuicoesCjPorTurma.Count(); indexAtribuicaoTurma++)
                    {
                        var atribuicaoTurma = Model.AtribuicoesCjPorTurma[indexAtribuicaoTurma];
                        @Html.Raw(MontarCabecalhoNomeProfessorTurma(atribuicaoTurma.NomeTurma))

                        @for (int indexAtribuicao = 0; indexAtribuicao < atribuicaoTurma.AtribuicoesCjProfessor.Count(); indexAtribuicao++)
                        {
                            var atribuicao = atribuicaoTurma.AtribuicoesCjProfessor[indexAtribuicao];
                            @Html.Raw(MontarLinhasAtribuicaoCjTurma(atribuicao, atribuicaoTurma.NomeTurma, indexAtribuicao + 1 == atribuicaoTurma.AtribuicoesCjProfessor.Count()))
                            if (atribuicao.Aulas?.Count() > 0)
                            {
                                @Html.Raw(MontarCabecalhoAulas(atribuicaoTurma.NomeTurma))
                                foreach (var aula in atribuicao.Aulas)
                                {
                                    @Html.Raw(MontarLinhasAula(aula, atribuicaoTurma.NomeTurma))
                                }
                                @Html.Raw(EspacoEmBranco(false))
                            }
                        }
                    }
                }
                @Html.Raw(linhaFinal)
                } else
                {
                    // Monta Dre
                    //Monta Ue .. 

                }
            }
        </div>
    </body>
</html>
}

