@model SME.SR.Infra.ResumoPAPDto

@{ int contadorQuebrarPagina = 0;
    int contadorMaximoLinhasPorPagina = 54;
    int contadorPagina = 0;

    string VerificaQuebra()
    {
        if (contadorQuebrarPagina >= contadorMaximoLinhasPorPagina)
        {
            contadorQuebrarPagina = 0;
            contadorPagina = contadorPagina + 1;

            var str = MontarCabecalho();
            return $@"<div style='page-break-before:always' />" + str;

        }
        return string.Empty;

    }

    string MontarCabecalho()
    {
        contadorQuebrarPagina = contadorQuebrarPagina + 7;
        var str =
            $@"<div>
<img class='img-logo-sgp' src='logoMono.png' alt='Logo SGP' />
</div>
<div class='titulo-sgp'>SGP - SISTEMA DE GESTÃO PEDAGÓGICA</div>
<div class='titulo-relatorio'> RELATÓRIO DE ACOMPANHAMENTO PAP - RESUMOS</div>
<div class='fonte-14 header-pagina'>
<table class='tblTopo'>
<tbody>
<tr>
<td  width='35%' class='espaco-esquerda-15 sem-border-bottom'>DRE: {Model.DreNome}</td>
<td width='45%' class='espaco-esquerda-15 sem-border-bottom'>UE: {Model.UeNome}</td>
<td width='20%' class='espaco-esquerda-15 sem-border-bottom'>ANO LETIVO: {Model.AnoLetivo}</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td  width='35%' class='espaco-esquerda-15 sem-border-bottom'>CICLO: {Model.Ciclo}</td>
<td width='30%' class='espaco-esquerda-15 sem-border-bottom'>ANO: {Model.Ano}</td>
<td width='35%' class='espaco-esquerda-15 sem-border-bottom'>TURMA: {Model.Turma}</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td  width='100%' class='espaco-esquerda-15 sem-border-bottom'>PERÍODO: {Model.Periodo}</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td  width='60%' class='espaco-esquerda-15'>USUÁRIO: {Model.UsuarioNome}</td>
<td width='20%' class='espaco-esquerda-15'>RF: {Model.UsuarioRF}</td>
<td width='20%' class='espaco-esquerda-15'>DATA: {Model.Data}</td>
</tr>
</tbody>
</table>
</div>
";

        return str;
    }

    string MontarCabecalhoTabela(string cabecalho)
    {
        var str = $@"
<table class='tabela-cabecalho'>
<thead>
<th class='sem-border-bottom'>{cabecalho}</th>
</thead>
</table>
";
        return str;
    }

    string EspacoEmBranco()
    {
        return $@"<table class='tabela-alunos'>
<thead>
<th class='thLimpo' width='100%'></th>
</thead>
</table>
";
    }

    string MontarTabelaTotalEstudantes()
    {
        var totalEstudantes = Model.TotalEstudantesDto;
        var anos = Model.TotalEstudantesDto.Anos.ToList();

        var str = $@"
<table class='tabela-cabecalho'>
<thead>
<tr>
";

        for (int i = 0; i < anos.Count; i++)
        {
            var ano = anos[i];
            str += $@"<th width='width%' class='sem-border-bottom'>{ano.AnoDescricao}°</th>";
        }

        str += $@"
<th width='15%' class='sem-border-bottom negrito'>TOTAL</th>
</tr>
</thead>
<tbody>
";

        for (int i = 0; i < anos.Count; i++)
        {
            var ano = anos[i];
            var width = 85 / anos.Count;

            str += $@"<td>{ano.Quantidade} / {ano.Porcentagem}%</td>";
        }

        str += $@"
<td width='15%' class='negrito'>{totalEstudantes.QuantidadeTotal} / {totalEstudantes.PorcentagemTotal}%</td>
</tbody>
</table>
";

        return str;
    }

    string MontarResultados()
    {
        var str = "";

        foreach (var resultado in Model.ResultadoDto)
        {

            str += MontarCabecalhoTabela(resultado.EixoDescricao);
            str += "<table>";
            int count = 0;
            foreach (var objetivo in resultado.Objetivos.OrderBy(a => a.Anos))
            {
                if (objetivo.Anos.Count() == 1)
                {
                    int respostas = 0;
                    if (count == 0)
                    {
                        str += @"<tr><td class='tb-cabecalho2 tb-w40' colspan='2'>&nbsp;</td>";

                        foreach (var ano in objetivo.Anos)
                        {
                            respostas = ano.Respostas.Count();
                            str += $"<td class='tb-cabecalho2 tb-w10'>{ano.AnoDescricao}°</td>";
                        }
                        str += "<td class='tb-cabecalho2 negrito tb-w20'>Total</td></tr>";
                    }

                    str += $@"<tr><td rowspan='{respostas}' class='tb-conteudo3' style='width: 20%'>{objetivo.ObjetivoDescricao}</td>";

                    var first = objetivo.Anos.First().Respostas.First();

                    str += $"<td class='tb-conteudo3'>{first.RespostaDescricao}</td>";
                    str += $"<td class='tb-conteudo3 centralizar'>{first.Quantidade} / {first.Porcentagem}%</td>";
                    str += $"<td class='tb-conteudo3 negrito tb-w20 centralizar'>{first.TotalQuantidade} / {first.TotalPorcentagem}%</td></tr>";

                    foreach (var ano in objetivo.Anos)
                    {


                        foreach (var resposta in ano.Respostas)
                        {
                            if (resposta.Equals(first))
                            {
                                continue;
                            }
                            str += "<tr>";

                            str += $"<td class='tb-conteudo3'>{resposta.RespostaDescricao}</td>";
                            str += $"<td class='tb-conteudo3 centralizar'>{resposta.Quantidade} / {resposta.Porcentagem}%</td>";
                            str += $"<td class='tb-conteudo3 negrito tb-w20 centralizar'>{resposta.TotalQuantidade} | {resposta.TotalPorcentagem}%</td>";
                            str += "</tr>";
                        }


                    }
                }
                else
                {
                    int respostas = 0;
                    respostas = objetivo.Anos.First().Respostas.Count();
                    if (count == 0)
                    {
                        str += @"<tr><td class='tb-cabecalho2 tb-w40' colspan='2'>&nbsp;</td>";

                        foreach (var ano in objetivo.Anos)
                        {

                            str += $"<td class='tb-cabecalho2 tb-w10'>{ano.AnoDescricao}°</td>";
                        }
                        str += "<td class='tb-cabecalho2 negrito tb-w20'>Total</td></tr>";
                    }

                    str += $@"<tr><td rowspan='{respostas}' class='tb-conteudo3' style='width: 20%'>{objetivo.ObjetivoDescricao}</td>";

                    var first = objetivo.Anos.First().Respostas.First();

                    for (var r = 0; r < respostas; r++)
                    {
                        if (r != 0)
                        {
                            str += "<tr>";
                        }

                        str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

                        foreach (var ano in objetivo.Anos)
                        {
                            str += $"<td class='tb-conteudo3 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].Quantidade} / {objetivo.Anos.First().Respostas.ToList()[r].Porcentagem}</td>";
                        }
                        str += $"<td class='tb-conteudo3 negrito tb-w20 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].TotalQuantidade} / {objetivo.Anos.First().Respostas.ToList()[r].TotalPorcentagem}</td>";
                        str += "</tr>";
                    }
                    str += "</tr>";
                }
                count += 1;
            }
            str += "</table>";
        }

        return str;
    }

    string MontarTabelaFrequencia()
    {
        var str = $@"
<table class='tabela-cabecalho'>
<thead>
<tr>
<th width='20%'></th>
";

        foreach (var frequencias in Model.FrequenciaDto)
        {
            foreach (var linhas in frequencias.Linhas)
            {
                foreach (var anos in linhas.Anos)
                {
                    str += $@"<th>{anos.DescricaoAno}</th>";
                }
                break;
            }
            break;
        }

        str += $@"<th width='15%' class='negrito'>TOTAL</th>
</tr>
</thead>
<tbody>
";

        foreach (var frequencias in Model.FrequenciaDto)
        {
            foreach (var linhas in frequencias.Linhas)
            {
                var classeNegrito = frequencias.FrequenciaDescricao == "Total" ? "negrito" : "";
                var classeFundoCinza = frequencias.FrequenciaDescricao == "Total" ? "fundo-cinza" : "";

                str += $@"
<tr>
<td class='alinhar-esquerda espaco-esquerda-15'>{frequencias.FrequenciaDescricao}</td>
";
                foreach (var anos in linhas.Anos)
                {
                    str += $@"<td class='{classeNegrito} {classeFundoCinza}'>{anos.Quantidade} / {anos.Porcentagem}%</td>";
                }
                str += $@"
<td class='negrito {classeFundoCinza}'>{linhas.QuantidadeTotalFrequencia} / {linhas.PorcentagemTotalFrequencia}%</td>
</tr>
";
            }
        }

        str += $@"
</tbody>
</table>
";

        return str;
    }

    string MontarInformacoesEscolares()
    {
        var str = "<table class='tabela-cabecalho'>";
        str += @"<thead><th width='14%'>&nbsp;</th><th class='tb-cabecalho2' width='14%'>&nbsp;</th>";

        var count = 0;
        foreach (var objetivo in Model.EncaminhamentoDto.First().Objetivos)
        {
            var width = objetivo.Anos.Count();
            if (count == 0)
            {
                foreach (var ano in objetivo.Anos)
                {
                    str += $"<th  width='{63 / width}%'>{ano.AnoDescricao}°</th>";
                }

                str += "<th negrito' width='9%'>Total</th></tr></thead>";
            }

            var respostas = objetivo.Anos.First().Respostas.Count();
            foreach (SME.SR.Infra.ResumoPAPResultadoAnoDto item in objetivo.Anos)
            {
                respostas = item.Respostas.Count() > respostas ? item.Respostas.Count() : respostas;
            }

            str += $@"<tr><td rowspan='{respostas}' class='tb-conteudo3'>{objetivo.ObjetivoDescricao}</td>";

            for (var r = 0; r < respostas; r++)
            {
                if (r != 0)
                {
                    str += "<tr>";
                }

                str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

                foreach (var ano in objetivo.Anos)
                {

                    if(r > ano.Respostas.ToList().Count() - 1 && ano.Respostas.ToList()[r].RespostaDescricao != objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao)
                    {
                        str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";

                    }else
                    {
                        str += $"<td class='tb-conteudo3 centralizar'>{ano.Respostas.ToList()[r].Quantidade} / {ano.Respostas.ToList()[r].Porcentagem}%</td>";

                    }


                }
                str += $"<td class='tb-conteudo3 negrito centralizar'>Q / P%</td>";
                str += "</tr>";
            }

            //var first = objetivo.Anos.First().Respostas.First();
            //var respostas = objetivo.Anos.First().Respostas.Count();

            //var rowspan = count == 2 ? '3' : '2';
            //str += $@"<tr><td rowspan='{rowspan}' class='tb-conteudo3'>{objetivo.ObjetivoDescricao}</td>";

            //if(respostas == 1){
            //    if(count != 2)
            //    {
            //        for (var r = 0; r < respostas; r++)
            //        {
            //            if(objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao != "Sim"){
            //                str += $"<td class='tb-conteudo3'>Sim</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //                str += "<tr>";
            //            }

            //            str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

            //            foreach (var ano in objetivo.Anos)
            //            {
            //                str += $"<td class='tb-conteudo3 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].Quantidade} / {objetivo.Anos.First().Respostas.ToList()[r].Porcentagem}%</td>";
            //            }

            //            str += $"<td class='tb-conteudo3 negrito centralizar'>{objetivo.Total.First().TotalQuantidade} / {objetivo.Total.First().TotalPorcentagem}%</td>";
            //            str += "</tr>";

            //            if(objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao != "Não"){
            //                str += "<tr>";
            //                str += $"<td class='tb-conteudo3'>Não</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito tb-w20 centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }
            //        }
            //    }
            //    else
            //    {
            //        for (var r = 0; r < respostas; r++)
            //        {
            //            if (objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao != "Aprovado")
            //            {
            //                str += $"<td class='tb-conteudo3' >Aprovado</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //                str += "<tr>";
            //            }

            //            str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

            //            foreach (var ano in objetivo.Anos)
            //            {
            //                str += $"<td class='tb-conteudo3 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].Quantidade} / {objetivo.Anos.First().Respostas.ToList()[r].Porcentagem}%</td>";
            //            }

            //            str += $"<td class='tb-conteudo3 negrito centralizar'>{objetivo.Total.First().TotalQuantidade} / {objetivo.Total.First().TotalPorcentagem}%</td>";
            //            str += "</tr>";

            //            if (objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao != "Aprovado pelo conselho")
            //            {
            //                str += "<tr>";
            //                str += $"<td class='tb-conteudo3'>Aprovado pelo conselho</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }

            //            if (objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao != "Retido")
            //            {
            //                str += "<tr>";
            //                str += $"<td class='tb-conteudo3'>Retido</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }
            //        }
            //    }
            //}
            //else
            //{
            //    if(count != 2)
            //    {
            //        for (var r = 0; r < respostas; r++)
            //        {
            //              if (r != 0)
            //            {
            //                str += "<tr>";
            //            }

            //            str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

            //            foreach (var ano in objetivo.Anos)
            //            {
            //                str += $"<td class='tb-conteudo3 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].Quantidade} / {objetivo.Anos.First().Respostas.ToList()[r].Porcentagem}%</td>";
            //            }

            //            str += $"<td class='tb-conteudo3 negrito centralizar'>{objetivo.Total.First().TotalQuantidade} / {objetivo.Total.First().TotalPorcentagem}%</td>";
            //            str += "</tr>";
            //        }
            //    }
            //    else
            //    {
            //        for (var r = 0; r < respostas; r++)
            //        {
            //            var respostaDescricao  = objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao;
            //            var respostaDescricaoAnterior = "";

            //            if (r != 0)
            //            {
            //                str += "<tr>";
            //                respostaDescricaoAnterior = objetivo.Anos.First().Respostas.ToList()[r - 1].RespostaDescricao;

            //            }

            //            if ( respostaDescricao == "Aprovado pelo conselho" && r == 0)
            //            {
            //                str += $"<td class='tb-conteudo3'>Aprovado</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }

            //            if ( respostaDescricao == "Retido" && r == 1 && respostaDescricaoAnterior != "Aprovado pelo conselho")
            //            {
            //                str += $"<td class='tb-conteudo3'>Aprovado pelo conselho</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }

            //            str += $"<td class='tb-conteudo3'>{objetivo.Anos.First().Respostas.ToList()[r].RespostaDescricao}</td>";

            //            foreach (var ano in objetivo.Anos)
            //            {
            //                str += $"<td class='tb-conteudo3 centralizar'>{objetivo.Anos.First().Respostas.ToList()[r].Quantidade} / {objetivo.Anos.First().Respostas.ToList()[r].Porcentagem}%</td>";
            //            }

            //            str += $"<td class='tb-conteudo3 negrito centralizar'>{objetivo.Total.First().TotalQuantidade} / {objetivo.Total.First().TotalPorcentagem}%</td>";
            //            str += "</tr>";

            //            if ( respostaDescricao == "Aprovado pelo conselho" && r == 1 && respostas < 3)
            //            {
            //                str += $"<td class='tb-conteudo3'>Retido</td>";

            //                foreach (var ano in objetivo.Anos)
            //                {
            //                    str += $"<td class='tb-conteudo3 centralizar'>0 / 0%</td>";
            //                }

            //                str += $"<td class='tb-conteudo3 negrito centralizar'>0 / 0%</td>";
            //                str += "</tr>";
            //            }
            //        }
            //    }
            //}
            count += 1;
        }
        str += "</table>";

        return str;
    }
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Relatório de Acompanhamento PAP - Resumos</title>
</head>
<body class="body-relatorio">
    <style>

        .tblTopo th, td {
            padding: 3px 0;
            text-align: left;
        }

        .body-relatorio {
            margin: 0.5cm auto;
            font-family: Roboto, sans-serif;
            width: 21cm;
            min-height: 29.7cm;
            background: white;
            color: #42474a;
        }

        .titulo-sgp {
            text-align: right;
            font-size: 14px;
            font-weight: bold;
        }

        .titulo-relatorio {
            text-align: right;
            font-size: 14.5px;
            margin-top: 7px;
        }

        .header-pagina {
            margin-top: 33px;
            margin-bottom: 22px;
        }

            .header-pagina td {
                text-align: left;
            }

        table {
            display: table;
            width: 100%;
            border-color: #42474a;
            empty-cells: show;
            border: none;
            border-collapse: collapse;
        }

        thead {
            background-color: #f3f3f3;
        }

        th {
            border: 1px solid #42474a;
            font-weight: normal;
        }

        td {
            border: 1px solid #42474a;
            text-align: center;
        }

        .tabela-cabecalho tr {
            font-size: 12px;
            height: 24px;
        }

        .mt-25 {
            margin-top: 25px;
        }

        .fonte-14 {
            font-size: 14px !important;
        }

        .alinhar-esquerda {
            text-align: left;
        }

        .espaco-esquerda-15 {
            padding-left: 15px;
        }

        .negrito {
            font-weight: bold;
        }

        .sem-border-bottom {
            border-bottom: 0;
        }

        .fundo-cinza {
            background-color: #f3f3f3;
        }

        .linha-dividida {
            display: flex;
            justify-content: center;
            flex-direction: column;
        }

        .justify-content-center span {
            justify-content: center;
        }

        span {
            display: flex;
            align-items: center;
            height: 23px;
        }

            span + span {
                border-top: 1px solid #42474a;
            }

        .ajustar-altura {
            height: 15px;
            padding: 8px 0;
        }

        .thLimpo {
            background-color: #ffffff;
            border-top: 0;
            border-bottom: 0;
            height: 22px;
        }

        .img-logo-sgp {
            height: 64px;
            float: left;
        }


        .tb-cabecalho1 {
            background-color: #f3f3f3;
            text-align: CENTER;
            font-size: 16px;
            padding: 10px;
            padding-left: 20px;
        }

        .tb-cabecalho2 {
            background-color: #f3f3f3;
            text-align: CENTER;
            font-size: 12px;
            padding: 5px;
        }

        .tb-w10 {
            width: 8%;
        }

        .tb-w20 {
            width: 20%;
        }

        .tb-w40 {
            width: 30%;
        }

        .tb-conteudo2 {
            border-top: none;
            width: 10%;
            text-align: CENTER;
            font-size: 16px;
            padding: 5px;
        }

        .tb-conteudo3 {
            font-size: 12px;
            border-top: none;
            padding-left: 10px;
            padding-right: 10px;
            text-align: left;
        }

        .centralizar {
            text-align: center;
        }
    </style>
    <div>
        @Html.Raw(MontarCabecalho())

        @Html.Raw(MontarCabecalhoTabela("TOTAL DE ESTUDANTES"))

        @Html.Raw(MontarTabelaTotalEstudantes())

        @Html.Raw(EspacoEmBranco())

        @if (Model.EhEncaminhamento)
        {
            @Html.Raw(MontarCabecalhoTabela("INFORMAÇÕES ESCOLARES"))
            @Html.Raw(MontarInformacoesEscolares())


        }
        else
        {
            @Html.Raw(MontarCabecalhoTabela("FREQUÊNCIA"))

            @Html.Raw(MontarTabelaFrequencia())
        }


        @Html.Raw(EspacoEmBranco())

        @Html.Raw(MontarCabecalhoTabela("DESEMPENHO ESTUDANTES"))
        @Html.Raw(MontarResultados())

        @{
            var json = Newtonsoft.Json.JsonConvert.SerializeObject(Model.EncaminhamentoDto);
            <div>
                @json
            </div>
        }
    </div>
</body>
</html>